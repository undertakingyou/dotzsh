#
# dotzsh : https://github.com/dotphiles/dotzsh
#
# Sets dotzsh options.
#
# Authors:
#   Ben O'Hara <bohara@gmail.com>
#

# debug: see with `dzinfo`
##zstyle ':dotzsh:load' timing 'yes'
##zstyle ':dotzsh:module:*' timing 'yes'

# Set the Zsh modules to load (man zshmodules).
zstyle ':dotzsh:load' zmodule 'stat'

# Set the Zsh functions to load (man zshcontrib).
zstyle ':dotzsh:load' zfunction 'zargs' 'zmv'

# Set the dotzsh modules to load (browse modules).
# The order matters.
zstyle ':dotzsh:load' dzmodule \
    'gnu-utility' \
    'environment' \
    'terminal' \
  'editor' \
  'history' \
  'utility' \
  'completion' \
  'theme' \
  'git' \
  'syntax-highlighting'

### Global settings
# Color output (auto set to 'no' on dumb terminals).
zstyle ':dotzsh:module:*' color 'yes'
# Setup aliases for modules (disable per module below).
zstyle ':dotzsh:module:*' aliases 'yes'
# Set case-sensitivity for completion, history lookup, etc.
zstyle ':dotzsh:module:*' case-sensitive 'no'

### Environment module
# Set which PAGER to use less or more
##zstyle ':dotzsh:module:environment' pager 'less'
# Enable mouse scrolling in less, add the following to *zshrc*
##zstyle ':dotzsh:module:environment:pager:less' mousescroll 'false'

### Terminal Module
# Auto set the tab and window titles.
zstyle ':dotzsh:module:terminal' auto-title 'yes'

### Editor module
# Set the key mapping style to 'emacs' or 'vi'.
zstyle ':dotzsh:module:editor' keymap 'vi'
# Set EDITOR to 'emacs' or 'vi'.
zstyle ':dotzsh:module:editor' editor 'vi'
# Auto convert .... to ../..
#zstyle ':dotzsh:module:editor' dot-expansion 'yes'

### Utility Module
# Disable `diff` highlighting
##zstyle ':dotzsh:module:utility:diff' color 'no'
# Disable `wdiff` highlighting
##zstyle ':dotzsh:module:utility:wdiff' color 'no'
# Disable `make` highlighting
##zstyle ':dotzsh:module:utility:make' color 'no'

### Completion module
# Expand global aliases automatically
#zstyle ':dotzsh:module:completion' expand-global-aliases 'yes'

### SSH module
zstyle ':dotzsh:module:ssh:agent' forwarding 'yes'
#zstyle ':dotzsh:module:ssh:aliases' hosts 'yes'
##zstyle ':dotzsh:module:ssh:agent' identities 'id_rsa' 'id_rsa2' 'id_github'

### GNUPG module
# Enable ssh-agent protocol emulation for gpg-agent
##zstyle ':dotzsh:module:gnupg' agent-ssh-support 'yes'

### OSX module
# Add aliases for Applications
# zstyle ':dotzsh:module:osx' launcher 'yes'
# Open/Resume temrinal in correct dir
# zstyle ':dotzsh:module:osx' terminal-resume 'yes'

### Git module
# Disable all git aliases
##zstyle ':dotzsh:module:git' aliases 'no'

### TMUX module
# Auto start a session when Zsh is launched.
# Setting it to 'local' only starts a session for local terminals.
# Setting it to 'remote' only starts a session for SSH connections.
##zstyle ':dotzsh:module:tmux' auto-start 'no'
#zstyle ':dotzsh:module:tmux:aliases' tmuxinator 'yes'

### Syntax Highlighting module
zstyle ':dotzsh:module:syntax-highlighting' color 'yes'
zstyle ':dotzsh:module:syntax-highlighting' highlighters 'main' 'brackets' 'pattern' \
 'cursor' 'root' \

### Theme module
# Set default theme to load.
# Setting it to 'random' loads a random theme.
# Auto set to 'off' on dumb terminals.
zstyle ':dotzsh:module:theme' theme 'undertakingyou'
### Set custom theme based on hostname or domain
# zstyle ':dotzsh:module:theme:hostname:your-host-here' theme 'dotphiles' 'soldark' 'magenta'
# zstyle ':dotzsh:module:theme:hostname:your-other-host-here' theme 'dotphiles' 'soldark' 'violet'
# zstyle ':dotzsh:module:theme:domain:your-domain-here' theme 'dotphiles' 'soldark' 'orange'

### Load dotzsh
source "$DOTZSH/init.zsh"

### Customize to your needs...

# setup keys accordingly
[[ -n "${key[Home]}"   ]] && bindkey "${key[Home]}" beginning-of-line
[[ -n "${key[End]}"    ]] && bindkey "${key[End]}" end-of-line
[[ -n "${key[Insert]}" ]] && bindkey "${key[Insert]}" overwrite-mode
[[ -n "${key[Delete]}" ]] && bindkey "${key[Delete]}" delete-char
[[ -n "${key[Up]}"     ]] && bindkey "${key[Up]}" up-line-or-history
[[ -n "${key[Down]}"   ]] && bindkey "${key[Down]}" down-line-or-history
[[ -n "${key[Left]}"   ]] && bindkey "${key[Left]}" backward-char
[[ -n "${key[Right]}"  ]] && bindkey "${key[Right]}" forward-char

# other key bindings
bindkey -v
bindkey -M viins '\e.' insert-last-word
bindkey -M vicmd '\e.' insert-last-word
bindkey "^r" history-incremental-search-backward

# apt aliases
alias apt-clean="sudo apt-get autoclean && sudo apt-get autoremove && sudo \
                aptitude clean && sudo aptitude remove && apt-orphand"
alias apt-filesearch="apt-file search"
alias apt-install="sudo aptitude -R install"
alias apt-orphand="sudo deborphan | xargs sudo aptitude -y purge"
alias apt-reinstall="sudo aptitude -R reinstall"
alias apt-remove="sudo aptitude remove"
alias apt-search="aptitude search"
alias apt-show="aptitude show"
alias apt-update="sudo aptitude update"
alias apt-upgrade="sudo aptitude update && sudo aptitude safe-upgrade"

# directory shortcuts
alias home="cd ~/"
alias desktop="cd ~/Desktop"

# docker shortcuts
alias docker_clean_images="docker rmi $(docker images -a --filter=dangling=true -q)"
alias docker_clean_ps="docker rm $(docker ps --filter=status=exited --filter=status=created -q)"
alias dc="docker-compose"

# archives and compression
extract() {
    if [[ -f $1 ]]; then
        case $1 in
            *.tar.bz2)  tar -xjf $1 ;;
            *.tar.gz)   tar -xzf $1 ;;
            *.tar.lzma) tar --lzma -xf $1 ;;
            *.bz2)      bunzip2 $1 ;;
            *.gz)       gunzip $1 ;;
            *.lzma)     unlzma $1 ;;
            *.rar)      unrar -e $1 ;;
            *.tar)      tar -xf $1 ;;
            *.tbz2)     tar -xjf $1 ;;
            *.tgz)      tar -xzf $1 ;;
            *.zip)      unzip -d ${$1%???} $1 ;;
            *.Z)        gunzip $1 ;;
            *.7z)       7z x $1 ;;
            *)          echo "Unsupported compressed file type." ;;
        esac
    else
        echo "'$1' is not a valid file"
    fi
}

mktar() { tar -cf "${1%%/}.tar" "${1%%/}/"; }
mktgz() { tar -czf "${1%%/}.tar.gz" "${1%%/}/"; }
mktbz() { tar -cjf "${1%%/}.tar.bz2" "${1%%/}/"; }
mktlz() { tar --lzma -cf "${1%%/}.tar.lzma" "${1%%/}/"; }

export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion
